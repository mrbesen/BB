package de.mrbesen;

import java.io.FileWriter;

import Core.Program;
import Job.Job;
import Job.Result.PartialResult;

public class CryptCrack extends Program {

	//	long public_key = 12600;//valid private key = 5042
	//	long mod = 151621;
	//	long public_key = 14012539;//valid private key: 2597832237
	//	long mod = 4862802614L;
	long public_key = 14742154580182L; //valid private key:  63409970811835
	long mod = 7458897482494455378L;

	int testsperrun = 50000;

	private int i = 0;
	
	
	//command to create a byte array from a file: xxd -p file | tr -d '\n' | sed 's/../&,(byte) 0x/g;s/,(byte) 0x$//' 
	private final static byte[] precompiledcode = {(byte) 0xca,(byte) 0xfe,(byte) 0xba,(byte) 0xbe,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x34,(byte) 0x00,(byte) 0x59,(byte) 0x0a,(byte) 0x00,(byte) 0x1e,(byte) 0x00,(byte) 0x31,(byte) 0x05,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0xaa,(byte) 0xbb,(byte) 0x09,(byte) 0x00,(byte) 0x11,(byte) 0x00,(byte) 0x32,(byte) 0x05,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0xee,(byte) 0xfe,(byte) 0x09,(byte) 0x00,(byte) 0x11,(byte) 0x00,(byte) 0x33,(byte) 0x05,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0xca,(byte) 0xca,(byte) 0x09,(byte) 0x00,(byte) 0x11,(byte) 0x00,(byte) 0x34,(byte) 0x05,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0xcc,(byte) 0xca,(byte) 0x09,(byte) 0x00,(byte) 0x11,(byte) 0x00,(byte) 0x35,(byte) 0x07,(byte) 0x00,(byte) 0x36,(byte) 0x03,(byte) 0x00,(byte) 0x00,(byte) 0xbb,(byte) 0xcc,(byte) 0x0a,(byte) 0x00,(byte) 0x0e,(byte) 0x00,(byte) 0x37,(byte) 0x07,(byte) 0x00,(byte) 0x38,(byte) 0x0a,(byte) 0x00,(byte) 0x11,(byte) 0x00,(byte) 0x39,(byte) 0x07,(byte) 0x00,(byte) 0x3a,(byte) 0x0a,(byte) 0x00,(byte) 0x3d,(byte) 0x00,(byte) 0x3e,(byte) 0x09,(byte) 0x00,(byte) 0x3f,(byte) 0x00,(byte) 0x40,(byte) 0x07,(byte) 0x00,(byte) 0x41,(byte) 0x0a,(byte) 0x00,(byte) 0x16,(byte) 0x00,(byte) 0x31,(byte) 0x0a,(byte) 0x00,(byte) 0x16,(byte) 0x00,(byte) 0x42,(byte) 0x08,(byte) 0x00,(byte) 0x43,(byte) 0x0a,(byte) 0x00,(byte) 0x16,(byte) 0x00,(byte) 0x44,(byte) 0x0a,(byte) 0x00,(byte) 0x16,(byte) 0x00,(byte) 0x45,(byte) 0x0a,(byte) 0x00,(byte) 0x13,(byte) 0x00,(byte) 0x46,(byte) 0x0a,(byte) 0x00,(byte) 0x0e,(byte) 0x00,(byte) 0x47,(byte) 0x07,(byte) 0x00,(byte) 0x48,(byte) 0x01,(byte) 0x00,(byte) 0x05,(byte) 0x73,(byte) 0x74,(byte) 0x61,(byte) 0x72,(byte) 0x74,(byte) 0x01,(byte) 0x00,(byte) 0x01,(byte) 0x4a,(byte) 0x01,(byte) 0x00,(byte) 0x0d,(byte) 0x43,(byte) 0x6f,(byte) 0x6e,(byte) 0x73,(byte) 0x74,(byte) 0x61,(byte) 0x6e,(byte) 0x74,(byte) 0x56,(byte) 0x61,(byte) 0x6c,(byte) 0x75,(byte) 0x65,(byte) 0x01,(byte) 0x00,(byte) 0x03,(byte) 0x65,(byte) 0x6e,(byte) 0x64,(byte) 0x01,(byte) 0x00,(byte) 0x05,(byte) 0x6d,(byte) 0x6f,(byte) 0x64,(byte) 0x75,(byte) 0x6c,(byte) 0x01,(byte) 0x00,(byte) 0x09,(byte) 0x70,(byte) 0x75,(byte) 0x62,(byte) 0x6c,(byte) 0x69,(byte) 0x63,(byte) 0x4b,(byte) 0x65,(byte) 0x79,(byte) 0x01,(byte) 0x00,(byte) 0x06,(byte) 0x3c,(byte) 0x69,(byte) 0x6e,(byte) 0x69,(byte) 0x74,(byte) 0x3e,(byte) 0x01,(byte) 0x00,(byte) 0x03,(byte) 0x28,(byte) 0x29,(byte) 0x56,(byte) 0x01,(byte) 0x00,(byte) 0x04,(byte) 0x43,(byte) 0x6f,(byte) 0x64,(byte) 0x65,(byte) 0x01,(byte) 0x00,(byte) 0x0f,(byte) 0x4c,(byte) 0x69,(byte) 0x6e,(byte) 0x65,(byte) 0x4e,(byte) 0x75,(byte) 0x6d,(byte) 0x62,(byte) 0x65,(byte) 0x72,(byte) 0x54,(byte) 0x61,(byte) 0x62,(byte) 0x6c,(byte) 0x65,(byte) 0x01,(byte) 0x00,(byte) 0x03,(byte) 0x72,(byte) 0x75,(byte) 0x6e,(byte) 0x01,(byte) 0x00,(byte) 0x0e,(byte) 0x28,(byte) 0x29,(byte) 0x4c,(byte) 0x4a,(byte) 0x6f,(byte) 0x62,(byte) 0x2f,(byte) 0x52,(byte) 0x65,(byte) 0x73,(byte) 0x75,(byte) 0x6c,(byte) 0x74,(byte) 0x3b,(byte) 0x01,(byte) 0x00,(byte) 0x0d,(byte) 0x53,(byte) 0x74,(byte) 0x61,(byte) 0x63,(byte) 0x6b,(byte) 0x4d,(byte) 0x61,(byte) 0x70,(byte) 0x54,(byte) 0x61,(byte) 0x62,(byte) 0x6c,(byte) 0x65,(byte) 0x07,(byte) 0x00,(byte) 0x36,(byte) 0x01,(byte) 0x00,(byte) 0x0c,(byte) 0x74,(byte) 0x72,(byte) 0x79,(byte) 0x5f,(byte) 0x74,(byte) 0x6f,(byte) 0x5f,(byte) 0x63,(byte) 0x72,(byte) 0x61,(byte) 0x63,(byte) 0x6b,(byte) 0x01,(byte) 0x00,(byte) 0x04,(byte) 0x28,(byte) 0x4a,(byte) 0x29,(byte) 0x5a,(byte) 0x01,(byte) 0x00,(byte) 0x0a,(byte) 0x53,(byte) 0x6f,(byte) 0x75,(byte) 0x72,(byte) 0x63,(byte) 0x65,(byte) 0x46,(byte) 0x69,(byte) 0x6c,(byte) 0x65,(byte) 0x01,(byte) 0x00,(byte) 0x0f,(byte) 0x43,(byte) 0x72,(byte) 0x61,(byte) 0x63,(byte) 0x6b,(byte) 0x4a,(byte) 0x4f,(byte) 0x42,(byte) 0x49,(byte) 0x44,(byte) 0x2e,(byte) 0x6a,(byte) 0x61,(byte) 0x76,(byte) 0x61,(byte) 0x0c,(byte) 0x00,(byte) 0x25,(byte) 0x00,(byte) 0x26,(byte) 0x0c,(byte) 0x00,(byte) 0x1f,(byte) 0x00,(byte) 0x20,(byte) 0x0c,(byte) 0x00,(byte) 0x22,(byte) 0x00,(byte) 0x20,(byte) 0x0c,(byte) 0x00,(byte) 0x23,(byte) 0x00,(byte) 0x20,(byte) 0x0c,(byte) 0x00,(byte) 0x24,(byte) 0x00,(byte) 0x20,(byte) 0x01,(byte) 0x00,(byte) 0x0a,(byte) 0x4a,(byte) 0x6f,(byte) 0x62,(byte) 0x2f,(byte) 0x52,(byte) 0x65,(byte) 0x73,(byte) 0x75,(byte) 0x6c,(byte) 0x74,(byte) 0x0c,(byte) 0x00,(byte) 0x25,(byte) 0x00,(byte) 0x49,(byte) 0x01,(byte) 0x00,(byte) 0x0a,(byte) 0x43,(byte) 0x72,(byte) 0x61,(byte) 0x63,(byte) 0x6b,(byte) 0x4a,(byte) 0x4f,(byte) 0x42,(byte) 0x49,(byte) 0x44,(byte) 0x0c,(byte) 0x00,(byte) 0x2d,(byte) 0x00,(byte) 0x2e,(byte) 0x01,(byte) 0x00,(byte) 0x18,(byte) 0x4a,(byte) 0x6f,(byte) 0x62,(byte) 0x2f,(byte) 0x52,(byte) 0x65,(byte) 0x73,(byte) 0x75,(byte) 0x6c,(byte) 0x74,(byte) 0x24,(byte) 0x50,(byte) 0x61,(byte) 0x72,(byte) 0x74,(byte) 0x69,(byte) 0x61,(byte) 0x6c,(byte) 0x52,(byte) 0x65,(byte) 0x73,(byte) 0x75,(byte) 0x6c,(byte) 0x74,(byte) 0x01,(byte) 0x00,(byte) 0x0d,(byte) 0x50,(byte) 0x61,(byte) 0x72,(byte) 0x74,(byte) 0x69,(byte) 0x61,(byte) 0x6c,(byte) 0x52,(byte) 0x65,(byte) 0x73,(byte) 0x75,(byte) 0x6c,(byte) 0x74,(byte) 0x01,(byte) 0x00,(byte) 0x0c,(byte) 0x49,(byte) 0x6e,(byte) 0x6e,(byte) 0x65,(byte) 0x72,(byte) 0x43,(byte) 0x6c,(byte) 0x61,(byte) 0x73,(byte) 0x73,(byte) 0x65,(byte) 0x73,(byte) 0x07,(byte) 0x00,(byte) 0x4a,(byte) 0x0c,(byte) 0x00,(byte) 0x4b,(byte) 0x00,(byte) 0x4c,(byte) 0x07,(byte) 0x00,(byte) 0x4d,(byte) 0x0c,(byte) 0x00,(byte) 0x4f,(byte) 0x00,(byte) 0x50,(byte) 0x01,(byte) 0x00,(byte) 0x17,(byte) 0x6a,(byte) 0x61,(byte) 0x76,(byte) 0x61,(byte) 0x2f,(byte) 0x6c,(byte) 0x61,(byte) 0x6e,(byte) 0x67,(byte) 0x2f,(byte) 0x53,(byte) 0x74,(byte) 0x72,(byte) 0x69,(byte) 0x6e,(byte) 0x67,(byte) 0x42,(byte) 0x75,(byte) 0x69,(byte) 0x6c,(byte) 0x64,(byte) 0x65,(byte) 0x72,(byte) 0x0c,(byte) 0x00,(byte) 0x51,(byte) 0x00,(byte) 0x52,(byte) 0x01,(byte) 0x00,(byte) 0x05,(byte) 0x3a,(byte) 0x74,(byte) 0x72,(byte) 0x75,(byte) 0x65,(byte) 0x0c,(byte) 0x00,(byte) 0x51,(byte) 0x00,(byte) 0x53,(byte) 0x0c,(byte) 0x00,(byte) 0x54,(byte) 0x00,(byte) 0x55,(byte) 0x0c,(byte) 0x00,(byte) 0x25,(byte) 0x00,(byte) 0x56,(byte) 0x0c,(byte) 0x00,(byte) 0x57,(byte) 0x00,(byte) 0x58,(byte) 0x01,(byte) 0x00,(byte) 0x0a,(byte) 0x4a,(byte) 0x6f,(byte) 0x62,(byte) 0x2f,(byte) 0x4a,(byte) 0x6f,(byte) 0x62,(byte) 0x73,(byte) 0x72,(byte) 0x63,(byte) 0x01,(byte) 0x00,(byte) 0x04,(byte) 0x28,(byte) 0x49,(byte) 0x29,(byte) 0x56,(byte) 0x01,(byte) 0x00,(byte) 0x10,(byte) 0x6a,(byte) 0x61,(byte) 0x76,(byte) 0x61,(byte) 0x2f,(byte) 0x6c,(byte) 0x61,(byte) 0x6e,(byte) 0x67,(byte) 0x2f,(byte) 0x4f,(byte) 0x62,(byte) 0x6a,(byte) 0x65,(byte) 0x63,(byte) 0x74,(byte) 0x01,(byte) 0x00,(byte) 0x08,(byte) 0x67,(byte) 0x65,(byte) 0x74,(byte) 0x43,(byte) 0x6c,(byte) 0x61,(byte) 0x73,(byte) 0x73,(byte) 0x01,(byte) 0x00,(byte) 0x13,(byte) 0x28,(byte) 0x29,(byte) 0x4c,(byte) 0x6a,(byte) 0x61,(byte) 0x76,(byte) 0x61,(byte) 0x2f,(byte) 0x6c,(byte) 0x61,(byte) 0x6e,(byte) 0x67,(byte) 0x2f,(byte) 0x43,(byte) 0x6c,(byte) 0x61,(byte) 0x73,(byte) 0x73,(byte) 0x3b,(byte) 0x01,(byte) 0x00,(byte) 0x15,(byte) 0x4a,(byte) 0x6f,(byte) 0x62,(byte) 0x2f,(byte) 0x52,(byte) 0x65,(byte) 0x73,(byte) 0x75,(byte) 0x6c,(byte) 0x74,(byte) 0x24,(byte) 0x52,(byte) 0x65,(byte) 0x73,(byte) 0x75,(byte) 0x6c,(byte) 0x74,(byte) 0x54,(byte) 0x79,(byte) 0x70,(byte) 0x65,(byte) 0x01,(byte) 0x00,(byte) 0x0a,(byte) 0x52,(byte) 0x65,(byte) 0x73,(byte) 0x75,(byte) 0x6c,(byte) 0x74,(byte) 0x54,(byte) 0x79,(byte) 0x70,(byte) 0x65,(byte) 0x01,(byte) 0x00,(byte) 0x05,(byte) 0x56,(byte) 0x61,(byte) 0x6c,(byte) 0x75,(byte) 0x65,(byte) 0x01,(byte) 0x00,(byte) 0x17,(byte) 0x4c,(byte) 0x4a,(byte) 0x6f,(byte) 0x62,(byte) 0x2f,(byte) 0x52,(byte) 0x65,(byte) 0x73,(byte) 0x75,(byte) 0x6c,(byte) 0x74,(byte) 0x24,(byte) 0x52,(byte) 0x65,(byte) 0x73,(byte) 0x75,(byte) 0x6c,(byte) 0x74,(byte) 0x54,(byte) 0x79,(byte) 0x70,(byte) 0x65,(byte) 0x3b,(byte) 0x01,(byte) 0x00,(byte) 0x06,(byte) 0x61,(byte) 0x70,(byte) 0x70,(byte) 0x65,(byte) 0x6e,(byte) 0x64,(byte) 0x01,(byte) 0x00,(byte) 0x1c,(byte) 0x28,(byte) 0x4a,(byte) 0x29,(byte) 0x4c,(byte) 0x6a,(byte) 0x61,(byte) 0x76,(byte) 0x61,(byte) 0x2f,(byte) 0x6c,(byte) 0x61,(byte) 0x6e,(byte) 0x67,(byte) 0x2f,(byte) 0x53,(byte) 0x74,(byte) 0x72,(byte) 0x69,(byte) 0x6e,(byte) 0x67,(byte) 0x42,(byte) 0x75,(byte) 0x69,(byte) 0x6c,(byte) 0x64,(byte) 0x65,(byte) 0x72,(byte) 0x3b,(byte) 0x01,(byte) 0x00,(byte) 0x2d,(byte) 0x28,(byte) 0x4c,(byte) 0x6a,(byte) 0x61,(byte) 0x76,(byte) 0x61,(byte) 0x2f,(byte) 0x6c,(byte) 0x61,(byte) 0x6e,(byte) 0x67,(byte) 0x2f,(byte) 0x53,(byte) 0x74,(byte) 0x72,(byte) 0x69,(byte) 0x6e,(byte) 0x67,(byte) 0x3b,(byte) 0x29,(byte) 0x4c,(byte) 0x6a,(byte) 0x61,(byte) 0x76,(byte) 0x61,(byte) 0x2f,(byte) 0x6c,(byte) 0x61,(byte) 0x6e,(byte) 0x67,(byte) 0x2f,(byte) 0x53,(byte) 0x74,(byte) 0x72,(byte) 0x69,(byte) 0x6e,(byte) 0x67,(byte) 0x42,(byte) 0x75,(byte) 0x69,(byte) 0x6c,(byte) 0x64,(byte) 0x65,(byte) 0x72,(byte) 0x3b,(byte) 0x01,(byte) 0x00,(byte) 0x08,(byte) 0x74,(byte) 0x6f,(byte) 0x53,(byte) 0x74,(byte) 0x72,(byte) 0x69,(byte) 0x6e,(byte) 0x67,(byte) 0x01,(byte) 0x00,(byte) 0x14,(byte) 0x28,(byte) 0x29,(byte) 0x4c,(byte) 0x6a,(byte) 0x61,(byte) 0x76,(byte) 0x61,(byte) 0x2f,(byte) 0x6c,(byte) 0x61,(byte) 0x6e,(byte) 0x67,(byte) 0x2f,(byte) 0x53,(byte) 0x74,(byte) 0x72,(byte) 0x69,(byte) 0x6e,(byte) 0x67,(byte) 0x3b,(byte) 0x01,(byte) 0x00,(byte) 0x38,(byte) 0x28,(byte) 0x4c,(byte) 0x4a,(byte) 0x6f,(byte) 0x62,(byte) 0x2f,(byte) 0x52,(byte) 0x65,(byte) 0x73,(byte) 0x75,(byte) 0x6c,(byte) 0x74,(byte) 0x3b,(byte) 0x4c,(byte) 0x4a,(byte) 0x6f,(byte) 0x62,(byte) 0x2f,(byte) 0x52,(byte) 0x65,(byte) 0x73,(byte) 0x75,(byte) 0x6c,(byte) 0x74,(byte) 0x24,(byte) 0x52,(byte) 0x65,(byte) 0x73,(byte) 0x75,(byte) 0x6c,(byte) 0x74,(byte) 0x54,(byte) 0x79,(byte) 0x70,(byte) 0x65,(byte) 0x3b,(byte) 0x4c,(byte) 0x6a,(byte) 0x61,(byte) 0x76,(byte) 0x61,(byte) 0x2f,(byte) 0x6c,(byte) 0x61,(byte) 0x6e,(byte) 0x67,(byte) 0x2f,(byte) 0x4f,(byte) 0x62,(byte) 0x6a,(byte) 0x65,(byte) 0x63,(byte) 0x74,(byte) 0x3b,(byte) 0x29,(byte) 0x56,(byte) 0x01,(byte) 0x00,(byte) 0x03,(byte) 0x61,(byte) 0x64,(byte) 0x64,(byte) 0x01,(byte) 0x00,(byte) 0x28,(byte) 0x28,(byte) 0x4c,(byte) 0x4a,(byte) 0x6f,(byte) 0x62,(byte) 0x2f,(byte) 0x52,(byte) 0x65,(byte) 0x73,(byte) 0x75,(byte) 0x6c,(byte) 0x74,(byte) 0x24,(byte) 0x50,(byte) 0x61,(byte) 0x72,(byte) 0x74,(byte) 0x69,(byte) 0x61,(byte) 0x6c,(byte) 0x52,(byte) 0x65,(byte) 0x73,(byte) 0x75,(byte) 0x6c,(byte) 0x74,(byte) 0x3b,(byte) 0x29,(byte) 0x4c,(byte) 0x4a,(byte) 0x6f,(byte) 0x62,(byte) 0x2f,(byte) 0x52,(byte) 0x65,(byte) 0x73,(byte) 0x75,(byte) 0x6c,(byte) 0x74,(byte) 0x3b,(byte) 0x00,(byte) 0x21,(byte) 0x00,(byte) 0x11,(byte) 0x00,(byte) 0x1e,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x04,(byte) 0x00,(byte) 0x12,(byte) 0x00,(byte) 0x1f,(byte) 0x00,(byte) 0x20,(byte) 0x00,(byte) 0x01,(byte) 0x00,(byte) 0x21,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x02,(byte) 0x00,(byte) 0x02,(byte) 0x00,(byte) 0x12,(byte) 0x00,(byte) 0x22,(byte) 0x00,(byte) 0x20,(byte) 0x00,(byte) 0x01,(byte) 0x00,(byte) 0x21,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x02,(byte) 0x00,(byte) 0x05,(byte) 0x00,(byte) 0x02,(byte) 0x00,(byte) 0x23,(byte) 0x00,(byte) 0x20,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x02,(byte) 0x00,(byte) 0x24,(byte) 0x00,(byte) 0x20,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x03,(byte) 0x00,(byte) 0x01,(byte) 0x00,(byte) 0x25,(byte) 0x00,(byte) 0x26,(byte) 0x00,(byte) 0x01,(byte) 0x00,(byte) 0x27,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x49,(byte) 0x00,(byte) 0x03,(byte) 0x00,(byte) 0x01,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x21,(byte) 0x2a,(byte) 0xb7,(byte) 0x00,(byte) 0x01,(byte) 0x2a,(byte) 0x14,(byte) 0x00,(byte) 0x02,(byte) 0xb5,(byte) 0x00,(byte) 0x04,(byte) 0x2a,(byte) 0x14,(byte) 0x00,(byte) 0x05,(byte) 0xb5,(byte) 0x00,(byte) 0x07,(byte) 0x2a,(byte) 0x14,(byte) 0x00,(byte) 0x08,(byte) 0xb5,(byte) 0x00,(byte) 0x0a,(byte) 0x2a,(byte) 0x14,(byte) 0x00,(byte) 0x0b,(byte) 0xb5,(byte) 0x00,(byte) 0x0d,(byte) 0xb1,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x01,(byte) 0x00,(byte) 0x28,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x16,(byte) 0x00,(byte) 0x05,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x04,(byte) 0x00,(byte) 0x04,(byte) 0x00,(byte) 0x05,(byte) 0x00,(byte) 0x0b,(byte) 0x00,(byte) 0x06,(byte) 0x00,(byte) 0x12,(byte) 0x00,(byte) 0x07,(byte) 0x00,(byte) 0x19,(byte) 0x00,(byte) 0x08,(byte) 0x00,(byte) 0x01,(byte) 0x00,(byte) 0x29,(byte) 0x00,(byte) 0x2a,(byte) 0x00,(byte) 0x01,(byte) 0x00,(byte) 0x27,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x8e,(byte) 0x00,(byte) 0x08,(byte) 0x00,(byte) 0x04,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x4f,(byte) 0xbb,(byte) 0x00,(byte) 0x0e,(byte) 0x59,(byte) 0x12,(byte) 0x0f,(byte) 0xb7,(byte) 0x00,(byte) 0x10,(byte) 0x4c,(byte) 0x14,(byte) 0x00,(byte) 0x02,(byte) 0x41,(byte) 0x20,(byte) 0x14,(byte) 0x00,(byte) 0x05,(byte) 0x94,(byte) 0x9c,(byte) 0x00,(byte) 0x3a,(byte) 0x2a,(byte) 0x20,(byte) 0xb6,(byte) 0x00,(byte) 0x12,(byte) 0x99,(byte) 0x00,(byte) 0x2b,(byte) 0x2b,(byte) 0xbb,(byte) 0x00,(byte) 0x13,(byte) 0x59,(byte) 0x2b,(byte) 0x59,(byte) 0xb6,(byte) 0x00,(byte) 0x14,(byte) 0x57,(byte) 0xb2,(byte) 0x00,(byte) 0x15,(byte) 0xbb,(byte) 0x00,(byte) 0x16,(byte) 0x59,(byte) 0xb7,(byte) 0x00,(byte) 0x17,(byte) 0x20,(byte) 0xb6,(byte) 0x00,(byte) 0x18,(byte) 0x12,(byte) 0x19,(byte) 0xb6,(byte) 0x00,(byte) 0x1a,(byte) 0xb6,(byte) 0x00,(byte) 0x1b,(byte) 0xb7,(byte) 0x00,(byte) 0x1c,(byte) 0xb6,(byte) 0x00,(byte) 0x1d,(byte) 0x57,(byte) 0x20,(byte) 0x0a,(byte) 0x61,(byte) 0x41,(byte) 0xa7,(byte) 0xff,(byte) 0xc4,(byte) 0x2b,(byte) 0xb0,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x02,(byte) 0x00,(byte) 0x28,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x1a,(byte) 0x00,(byte) 0x06,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x0b,(byte) 0x00,(byte) 0x0a,(byte) 0x00,(byte) 0x0c,(byte) 0x00,(byte) 0x16,(byte) 0x00,(byte) 0x0d,(byte) 0x00,(byte) 0x1e,(byte) 0x00,(byte) 0x0e,(byte) 0x00,(byte) 0x46,(byte) 0x00,(byte) 0x0c,(byte) 0x00,(byte) 0x4d,(byte) 0x00,(byte) 0x11,(byte) 0x00,(byte) 0x2b,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x0d,(byte) 0x00,(byte) 0x03,(byte) 0xfd,(byte) 0x00,(byte) 0x0e,(byte) 0x07,(byte) 0x00,(byte) 0x2c,(byte) 0x04,(byte) 0x37,(byte) 0xfa,(byte) 0x00,(byte) 0x06,(byte) 0x00,(byte) 0x01,(byte) 0x00,(byte) 0x2d,(byte) 0x00,(byte) 0x2e,(byte) 0x00,(byte) 0x01,(byte) 0x00,(byte) 0x27,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x39,(byte) 0x00,(byte) 0x04,(byte) 0x00,(byte) 0x03,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x16,(byte) 0x2a,(byte) 0xb4,(byte) 0x00,(byte) 0x0d,(byte) 0x1f,(byte) 0x69,(byte) 0x2a,(byte) 0xb4,(byte) 0x00,(byte) 0x0a,(byte) 0x71,(byte) 0x0a,(byte) 0x94,(byte) 0x9a,(byte) 0x00,(byte) 0x07,(byte) 0x04,(byte) 0xa7,(byte) 0x00,(byte) 0x04,(byte) 0x03,(byte) 0xac,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x02,(byte) 0x00,(byte) 0x28,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x06,(byte) 0x00,(byte) 0x01,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x14,(byte) 0x00,(byte) 0x2b,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x05,(byte) 0x00,(byte) 0x02,(byte) 0x14,(byte) 0x40,(byte) 0x01,(byte) 0x00,(byte) 0x02,(byte) 0x00,(byte) 0x2f,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x02,(byte) 0x00,(byte) 0x30,(byte) 0x00,(byte) 0x3c,(byte) 0x00,(byte) 0x00,(byte) 0x00,(byte) 0x12,(byte) 0x00,(byte) 0x02,(byte) 0x00,(byte) 0x13,(byte) 0x00,(byte) 0x0e,(byte) 0x00,(byte) 0x3b,(byte) 0x00,(byte) 0x01,(byte) 0x00,(byte) 0x3f,(byte) 0x00,(byte) 0x0e,(byte) 0x00,(byte) 0x4e,(byte) 0x40,(byte) 0x19};
	
	@Override
	public boolean enquenextJob() {
		if(i >= mod) {
			System.out.println("encryption done!");
			return false;
		}
		enque(i, testsperrun >= mod ? mod : i+testsperrun, getJobManager().jobs_total()+1);
		i+=testsperrun;
		return i < mod;
	}

	private void enque(long from, long to, int jobid) {
		//		System.out.println("from: " + from + " to: " + to);
		
//		 String code = "import Job.Jobsrc;\nimport Job.Result;\nimport Job.Result.ResultType;\npublic class Crack" + jobid + " extends Jobsrc {\n	private final long start = " + from + "L;	private final long end = " + to + "L;	private long modul = " + mod + "L;	private long publicKey = " + public_key + "L;	\n	@Override\n	public Result run() {\n		Result out = new Result(" + jobid + ");\n		for(long i = start; i < end; i++) {\n			if(try_to_crack(i))\n {out.add(out.new PartialResult(ResultType.Value, i + \":true\"));\n}\n		}\n		return out;\n	}\n	public boolean try_to_crack(long i) {\n	/*System.out.println(\"Testing\"+i);*/	return (publicKey * i) % modul == 1;\n	}\n}";
//		getJobManager().enque(new Job(code), false);
		//enque with precompiled code! test!
		Job newjob = new Job("");
		newjob.classname = "Crack" + String.format("%05d", jobid);
		newjob.compiled = true;
		
		byte[] jobidb =  stringtoBytes(String.format("%05d", jobid));
		byte[] bytes = replace(precompiledcode.clone(), 0x143 , jobidb);
		bytes = replace(bytes,  0x180 , jobidb);
		bytes = replace(bytes, 0x10, longtoBytes(from));
		bytes = replace(bytes, 0x1E, longtoBytes(to));
		bytes = replace(bytes, 0x2C, longtoBytes(mod));
		bytes = replace(bytes, 0x3A, longtoBytes(public_key));
		bytes = replace(bytes, 0x4B, inttoBytes(jobid));
		newjob.classfile = bytes; 
		getJobManager().enque(newjob, true);
		System.out.println("enqued job with classname: " + newjob.classname + " and jobid: " + newjob.getId());
	}

	private byte[] replace(byte[] old, int start, byte[] new_) {
		for(int i = start; i - start < new_.length; i++) {
			old[i] = new_[i-start];
		}
		return old;
	}
	
	@Override
	public void HandlePartialResult(PartialResult pres) {
		String in = (String) pres.obj;
		System.out.println(in);
		if(in.split(":",2)[1] == "true") {//match!
			String key = in.split(":",2)[0];
			//write to file
			try {
				FileWriter fw = new FileWriter("saved");
				fw.write(key);
				fw.close();
			} catch(Exception e) {
				e.printStackTrace();
				System.out.println("Error while saving progress");
			}

			System.out.println("KEY FOUND!\nkey = " + key);
			getJobManager().clear();//stop this job
		}
	}
}